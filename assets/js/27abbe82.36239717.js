"use strict";(self.webpackChunkwebsite_2=self.webpackChunkwebsite_2||[]).push([[506],{2227:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"documents/skald","title":"Skald \u7bc0\u9ede\uff08Edge/Node/Single Process\uff09\u6280\u8853\u8aaa\u660e","description":"Skald \u662f Skalds \u5206\u6563\u5f0f\u4efb\u52d9\u8abf\u5ea6\u7cfb\u7d71\u7684\u4efb\u52d9\u751f\u6210\u8207\u8abf\u5ea6\u6838\u5fc3\u6a21\u7d44\uff0c\u8ca0\u8cac\u4efb\u52d9\u7684\u521d\u59cb\u5316\u3001\u5206\u914d\u3001\u8207 TaskWorker \u7684\u7ba1\u7406\u3002Skald \u73fe\u652f\u63f4\u4e09\u7a2e\u904b\u4f5c\u6a21\u5f0f\uff1aEdge\uff08\u908a\u7de3\u7bc0\u9ede\uff09\u3001Node\uff08\u5de5\u4f5c\u7bc0\u9ede\uff09\u8207 Single Process\uff08\u55ae\u4e00\u884c\u7a0b\uff09\uff0c\u53ef\u4f9d\u64da\u61c9\u7528\u5834\u666f\u5f48\u6027\u90e8\u7f72\uff0c\u5be6\u73fe\u9ad8\u6548\u80fd\u3001\u53ef\u64f4\u5c55\u7684\u4efb\u52d9\u8abf\u5ea6\u8207\u57f7\u884c\u3002","source":"@site/docs/documents/skald.md","sourceDirName":"documents","slug":"/documents/skald","permalink":"/Skalds/docs/documents/skald","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"sidebar_label":"Skald"},"sidebar":"documentsSidebar","previous":{"title":"EventQueue","permalink":"/Skalds/docs/documents/event_queue"},"next":{"title":"System Controller\uff08\u7cfb\u7d71\u6838\u5fc3\u63a7\u5236\u5668\uff09\u6280\u8853\u8aaa\u660e","permalink":"/Skalds/docs/documents/system_controller/"}}');var r=s(5813),a=s(9863);const d={sidebar_position:6,sidebar_label:"Skald"},i="Skald \u7bc0\u9ede\uff08Edge/Node/Single Process\uff09\u6280\u8853\u8aaa\u660e",o={},c=[{value:"1. Skald \u5728\u67b6\u69cb\u4e2d\u7684\u5b9a\u4f4d",id:"1-skald-\u5728\u67b6\u69cb\u4e2d\u7684\u5b9a\u4f4d",level:2},{value:"2. Skald \u904b\u4f5c\u6a21\u5f0f",id:"2-skald-\u904b\u4f5c\u6a21\u5f0f",level:2},{value:"Edge \u6a21\u5f0f\uff08skald_mode=&quot;edge&quot;\uff09",id:"edge-\u6a21\u5f0fskald_modeedge",level:3},{value:"Node \u6a21\u5f0f\uff08skald_mode=&quot;node&quot;\uff09",id:"node-\u6a21\u5f0fskald_modenode",level:3},{value:"Single Process \u6a21\u5f0f\uff08skald_mode=&quot;single_process&quot;\uff09",id:"single-process-\u6a21\u5f0fskald_modesingle_process",level:3},{value:"3. \u555f\u52d5\u6d41\u7a0b\u8207\u914d\u7f6e",id:"3-\u555f\u52d5\u6d41\u7a0b\u8207\u914d\u7f6e",level:2},{value:"3.1 SkaldConfig \u53c3\u6578",id:"31-skaldconfig-\u53c3\u6578",level:3},{value:"3.2 \u555f\u52d5\u7bc4\u4f8b",id:"32-\u555f\u52d5\u7bc4\u4f8b",level:3},{value:"Edge \u7bc0\u9ede",id:"edge-\u7bc0\u9ede",level:4},{value:"Node \u7bc0\u9ede",id:"node-\u7bc0\u9ede",level:4},{value:"Single Process \u884c\u7a0b",id:"single-process-\u884c\u7a0b",level:4},{value:"3.3 \u5728 Kubernetes \u5efa\u7acb Single Process \u4efb\u52d9",id:"33-\u5728-kubernetes-\u5efa\u7acb-single-process-\u4efb\u52d9",level:2},{value:"4. Skald \u6838\u5fc3\u6d41\u7a0b\u8207\u751f\u547d\u9031\u671f",id:"4-skald-\u6838\u5fc3\u6d41\u7a0b\u8207\u751f\u547d\u9031\u671f",level:2},{value:"4.1 \u4efb\u52d9\u5efa\u7acb\u6d41\u7a0b",id:"41-\u4efb\u52d9\u5efa\u7acb\u6d41\u7a0b",level:3},{value:"4.2 \u4efb\u52d9\u66f4\u65b0\u8207\u53d6\u6d88",id:"42-\u4efb\u52d9\u66f4\u65b0\u8207\u53d6\u6d88",level:3},{value:"5. Skald \u4e3b\u8981\u529f\u80fd\u8207\u5be6\u4f5c\u91cd\u9ede",id:"5-skald-\u4e3b\u8981\u529f\u80fd\u8207\u5be6\u4f5c\u91cd\u9ede",level:2},{value:"5.1 \u591a\u5354\u5b9a\u6574\u5408",id:"51-\u591a\u5354\u5b9a\u6574\u5408",level:3},{value:"5.2 TaskWorker \u7ba1\u7406",id:"52-taskworker-\u7ba1\u7406",level:3},{value:"5.3 \u65e5\u8a8c\u8207\u76e3\u63a7",id:"53-\u65e5\u8a8c\u8207\u76e3\u63a7",level:3},{value:"6. YAML \u914d\u7f6e\u8aaa\u660e\uff08Edge \u6a21\u5f0f\uff09",id:"6-yaml-\u914d\u7f6e\u8aaa\u660eedge-\u6a21\u5f0f",level:2},{value:"7. Skald \u4e3b\u8981\u7a0b\u5f0f\u78bc\u7d50\u69cb",id:"7-skald-\u4e3b\u8981\u7a0b\u5f0f\u78bc\u7d50\u69cb",level:2},{value:"7.1 Skald \u4e3b\u985e\u5225",id:"71-skald-\u4e3b\u985e\u5225",level:3},{value:"7.2 \u914d\u7f6e\u8207\u74b0\u5883\u8b8a\u6578",id:"72-\u914d\u7f6e\u8207\u74b0\u5883\u8b8a\u6578",level:3},{value:"8. Skald \u8207\u5176\u4ed6\u6a21\u7d44\u7684\u4e92\u52d5",id:"8-skald-\u8207\u5176\u4ed6\u6a21\u7d44\u7684\u4e92\u52d5",level:2},{value:"9. \u9032\u968e\u7279\u6027",id:"9-\u9032\u968e\u7279\u6027",level:2},{value:"10. \u53c3\u8003\u6587\u4ef6\u8207\u5ef6\u4f38\u95b1\u8b80",id:"10-\u53c3\u8003\u6587\u4ef6\u8207\u5ef6\u4f38\u95b1\u8b80",level:2}];function t(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"skald-\u7bc0\u9edeedgenodesingle-process\u6280\u8853\u8aaa\u660e",children:"Skald \u7bc0\u9ede\uff08Edge/Node/Single Process\uff09\u6280\u8853\u8aaa\u660e"})}),"\n",(0,r.jsxs)(n.p,{children:["Skald \u662f Skalds \u5206\u6563\u5f0f\u4efb\u52d9\u8abf\u5ea6\u7cfb\u7d71\u7684",(0,r.jsx)(n.strong,{children:"\u4efb\u52d9\u751f\u6210\u8207\u8abf\u5ea6\u6838\u5fc3\u6a21\u7d44"}),"\uff0c\u8ca0\u8cac\u4efb\u52d9\u7684\u521d\u59cb\u5316\u3001\u5206\u914d\u3001\u8207 TaskWorker \u7684\u7ba1\u7406\u3002Skald \u73fe\u652f\u63f4\u4e09\u7a2e\u904b\u4f5c\u6a21\u5f0f\uff1a",(0,r.jsx)(n.strong,{children:"Edge\uff08\u908a\u7de3\u7bc0\u9ede\uff09"}),"\u3001**Node\uff08\u5de5\u4f5c\u7bc0\u9ede\uff09**\u8207 ",(0,r.jsx)(n.strong,{children:"Single Process\uff08\u55ae\u4e00\u884c\u7a0b\uff09"}),"\uff0c\u53ef\u4f9d\u64da\u61c9\u7528\u5834\u666f\u5f48\u6027\u90e8\u7f72\uff0c\u5be6\u73fe\u9ad8\u6548\u80fd\u3001\u53ef\u64f4\u5c55\u7684\u4efb\u52d9\u8abf\u5ea6\u8207\u57f7\u884c\u3002"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-skald-\u5728\u67b6\u69cb\u4e2d\u7684\u5b9a\u4f4d",children:"1. Skald \u5728\u67b6\u69cb\u4e2d\u7684\u5b9a\u4f4d"}),"\n",(0,r.jsx)(n.p,{children:"Skalds \u7cfb\u7d71\u67b6\u69cb\u5982\u4e0b\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"System Controller"}),"\uff1a\u7cfb\u7d71\u6838\u5fc3\u63a7\u5236\u5668\uff0c\u8ca0\u8cac API\u3001\u76e3\u63a7\u3001\u8abf\u5ea6\u8207\u72c0\u614b\u7ba1\u7406\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Generator\uff08Skald\uff09"}),"\uff1a\u8ca0\u8cac\u4efb\u52d9\u751f\u6210\u3001\u5206\u914d\u8207 TaskWorker \u7ba1\u7406\uff0c\u652f\u63f4 Edge / Node / Single Process \u6a21\u5f0f\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Worker"}),"\uff1a\u5be6\u969b\u57f7\u884c\u4efb\u52d9\u7684\u7368\u7acb\u9032\u7a0b\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Queue"}),"\uff1a\u57fa\u65bc Kafka \u7684\u4e8b\u4ef6\u4f47\u5217\uff0c\u5be6\u73fe\u6a21\u7d44\u9593\u9ad8\u6548\u901a\u8a0a\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cache Memory"}),"\uff1aRedis \u5feb\u53d6\uff0c\u8ca0\u8cac\u4efb\u52d9\u72c0\u614b\u3001\u5fc3\u8df3\u7b49\u9ad8\u983b\u8cc7\u6599\u540c\u6b65\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Disk Storage"}),"\uff1aMongoDB \u6c38\u4e45\u5132\u5b58\u4efb\u52d9\u8cc7\u6599\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Skald \u4f5c\u70ba Task Generator\uff0c\u627f\u4e0a\uff08System Controller/Dispatcher\uff09\uff0c\u555f\u52d5\u8207\u7ba1\u7406\u4e0b\u6e38 TaskWorker\uff0c\u4e26\u8207 Event Queue\u3001Cache Memory \u5bc6\u5207\u4e92\u52d5\u3002"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-skald-\u904b\u4f5c\u6a21\u5f0f",children:"2. Skald \u904b\u4f5c\u6a21\u5f0f"}),"\n",(0,r.jsx)(n.h3,{id:"edge-\u6a21\u5f0fskald_modeedge",children:'Edge \u6a21\u5f0f\uff08skald_mode="edge"\uff09'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u9069\u7528\u65bc",(0,r.jsx)(n.strong,{children:"\u6279\u91cf\u3001\u975c\u614b\u4efb\u52d9"}),"\u5834\u666f\u3002"]}),"\n",(0,r.jsx)(n.li,{children:"\u555f\u52d5\u6642\u81ea\u52d5\u8f09\u5165 YAML \u914d\u7f6e\u6a94\uff0c\u6279\u6b21\u8a3b\u518a\u591a\u500b TaskWorker\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u9069\u5408\u5927\u898f\u6a21\u3001\u9810\u5148\u898f\u5283\u7684\u4efb\u52d9\u57f7\u884c\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"node-\u6a21\u5f0fskald_modenode",children:'Node \u6a21\u5f0f\uff08skald_mode="node"\uff09'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u9069\u7528\u65bc",(0,r.jsx)(n.strong,{children:"\u52d5\u614b\u4efb\u52d9\u5206\u914d"}),"\u5834\u666f\u3002"]}),"\n",(0,r.jsx)(n.li,{children:"\u4efb\u52d9\u7531 System Controller \u52d5\u614b\u5206\u914d\uff0cSkald \u6839\u64da\u4e8b\u4ef6\u5efa\u7acb TaskWorker\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u9069\u5408\u5f48\u6027\u64f4\u5c55\u3001\u5373\u6642\u4efb\u52d9\u8abf\u5ea6\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"single-process-\u6a21\u5f0fskald_modesingle_process",children:'Single Process \u6a21\u5f0f\uff08skald_mode="single_process"\uff09'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u9069\u7528\u65bc",(0,r.jsx)(n.strong,{children:"\u50c5\u9700\u555f\u52d5\u55ae\u4e00 TaskWorker"}),"\u3001\u4e14\u4ea4\u7531\u5916\u90e8\u6392\u7a0b\u5668\u7ba1\u7406\u751f\u547d\u9031\u671f\u7684\u5834\u666f\u3002"]}),"\n",(0,r.jsx)(n.li,{children:"\u555f\u52d5\u5f8c\u76f4\u63a5\u5f9e YAML \u4e2d\u53d6\u5f97\u7b2c\u4e00\u500b TaskWorker \u8a2d\u5b9a\u4e26\u4ee5\u7368\u7acb\u884c\u7a0b\u57f7\u884c\uff0c\u4e0d\u6703\u8a3b\u518a Skald \u7bc0\u9ede\uff0c\u4e5f\u4e0d\u4f9d\u8cf4 Skald heartbeat\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u53ef\u5728\u7f3a\u5c11 Kafka / Redis \u7b49\u57fa\u790e\u8a2d\u65bd\u6642\u57f7\u884c\uff1b\u82e5\u74b0\u5883\u4e2d\u6709\u76f8\u4f9d\u670d\u52d9\u4ea6\u53ef\u7167\u5e38\u900f\u904e\u74b0\u5883\u8b8a\u6578\u6ce8\u5165\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u975e\u5e38\u9069\u5408\u642d\u914d Kubernetes Deployment \u6216 Job\uff0c\u5c07\u6bcf\u500b TaskWorker \u6253\u5305\u6210\u7368\u7acb Pod\uff0c\u7531 K8s \u8ca0\u8cac\u64f4\u7e2e\u8207\u751f\u547d\u5468\u671f\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-\u555f\u52d5\u6d41\u7a0b\u8207\u914d\u7f6e",children:"3. \u555f\u52d5\u6d41\u7a0b\u8207\u914d\u7f6e"}),"\n",(0,r.jsx)(n.h3,{id:"31-skaldconfig-\u53c3\u6578",children:"3.1 SkaldConfig \u53c3\u6578"}),"\n",(0,r.jsxs)(n.p,{children:["Skald \u555f\u52d5\u6642\u9700\u50b3\u5165 ",(0,r.jsx)(n.a,{href:"https://github.com/JiHungLin/skalds/blob/main/skalds/config/skald_config.py",children:(0,r.jsx)(n.code,{children:"SkaldConfig"})})," \u7269\u4ef6\uff0c\u652f\u63f4\u4e0b\u5217\u4e3b\u8981\u53c3\u6578\uff1a"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skald_id"}),"\uff1aSkald \u7bc0\u9ede\u552f\u4e00\u8b58\u5225\u78bc"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skald_mode"}),"\uff1a\u904b\u4f5c\u6a21\u5f0f\uff08",(0,r.jsx)(n.code,{children:'"edge"'}),"\u3001",(0,r.jsx)(n.code,{children:'"node"'})," \u6216 ",(0,r.jsx)(n.code,{children:'"single_process"'}),"\uff09"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"yaml_file"}),"\uff1aYAML \u914d\u7f6e\u6a94\u8def\u5f91\uff08Edge \u6a21\u5f0f\u9700\u6307\u5b9a\uff09"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"redis_host"}),"\u3001",(0,r.jsx)(n.code,{children:"kafka_host"}),"\u3001",(0,r.jsx)(n.code,{children:"mongo_host"}),"\uff1a\u5916\u90e8\u670d\u52d9\u9023\u7dda\u8cc7\u8a0a"]}),"\n",(0,r.jsx)(n.li,{children:"\u5176\u4ed6\u65e5\u8a8c\u3001\u8a8d\u8b49\u3001\u91cd\u8a66\u7b49\u53c3\u6578"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u8a73\u7d30\u53c3\u6578\u8acb\u53c3\u8003 ",(0,r.jsx)(n.a,{href:"https://github.com/JiHungLin/skalds/blob/main/skalds/config/systemconfig.py",children:(0,r.jsx)(n.code,{children:"systemconfig.py"})})," \u8207 ",(0,r.jsx)(n.code,{children:".env.example"}),"\u3002"]}),"\n",(0,r.jsx)(n.h3,{id:"32-\u555f\u52d5\u7bc4\u4f8b",children:"3.2 \u555f\u52d5\u7bc4\u4f8b"}),"\n",(0,r.jsx)(n.h4,{id:"edge-\u7bc0\u9ede",children:"Edge \u7bc0\u9ede"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from skalds import Skalds\nfrom skalds.config.skald_config import SkaldConfig\n\nconfig = SkaldConfig(\n    skald_mode="edge",\n    yaml_file="all_workers.yml",\n    redis_host="localhost",\n    kafka_host="127.0.0.1",\n    mongo_host="mongodb://root:root@localhost:27017/"\n)\n\napp = Skalds(config)\napp.register_task_worker(MyWorker)\napp.run()\n'})}),"\n",(0,r.jsx)(n.h4,{id:"node-\u7bc0\u9ede",children:"Node \u7bc0\u9ede"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'config = SkaldConfig(\n    skald_mode="node",\n    redis_host="localhost",\n    kafka_host="127.0.0.1",\n    mongo_host="mongodb://root:root@localhost:27017/"\n)\n\napp = Skalds(config)\napp.register_task_worker(MyWorker)\napp.run()\n'})}),"\n",(0,r.jsx)(n.h4,{id:"single-process-\u884c\u7a0b",children:"Single Process \u884c\u7a0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'config = SkaldConfig(\n    skald_mode="single_process",\n    yaml_file="all_workers.yml",\n    log_level="INFO"\n)\n\napp = Skalds(config)\napp.register_task_worker(MyWorker)\napp.run()\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"single_process"})," \u6703\u76f4\u63a5\u555f\u52d5 YAML \u4e2d\u7684\u7b2c\u4e00\u500b TaskWorker\uff0c\u6d41\u7a0b\u7d50\u675f\u5f8c\u7a0b\u5f0f\u5373\u544a\u9000\u51fa\uff0c\u9069\u5408\u6574\u5408\u81f3\u6279\u6b21\u6216\u5bb9\u5668\u5316\u74b0\u5883\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"33-\u5728-kubernetes-\u5efa\u7acb-single-process-\u4efb\u52d9",children:"3.3 \u5728 Kubernetes \u5efa\u7acb Single Process \u4efb\u52d9"}),"\n",(0,r.jsxs)(n.p,{children:["Single Process \u6a21\u5f0f\u80fd\u8b93\u6bcf\u500b TaskWorker \u4ee5\u7368\u7acb Pod \u904b\u884c\uff0c\u900f\u904e Kubernetes \u7ba1\u7406\u751f\u547d\u9031\u671f\u8207\u64f4\u7e2e\u3002\u4ee5\u4e0b\u793a\u7bc4\u4ee5 Deployment \u5e38\u99d0\u57f7\u884c\u55ae\u4e00 Worker\uff0c\u4e26\u642d\u914d Python ",(0,r.jsx)(n.code,{children:"kubernetes"})," \u5957\u4ef6\u7684 ",(0,r.jsx)(n.code,{children:"create_namespaced_deployment"})," \u5efa\u7acb\u8cc7\u6e90\u3002"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5148\u5c07 ",(0,r.jsx)(n.code,{children:"tests/manual/all_workers.yml"})," \u5167\u5bb9\u8f49\u63db\u70ba ConfigMap\uff0c\u53ef\u9078\u64c7\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"kubectl"})," \u6216 Python \u5ba2\u6236\u7aef\u5efa\u7acb\uff1a"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: skald-worker-config\ndata:\n  all_workers.yml: |\n    TaskWorkers:\n      TaskWorker1:\n        isPersistent: true\n        attachments:\n          fix_frame: 10\n          rtsp_url: rtsp://192.168.1.1/camera1\n        className: MyWorker\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5957\u7528 ConfigMap\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f skald-worker-config.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6216\u900f\u904e Python \u5efa\u7acb\uff08\u91dd\u5c0d\u55ae\u4e00\u4efb\u52d9\uff09\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from kubernetes import client, config\n\ndef create_worker_configmap(namespace: str = "default", task_name: str = "task-alpha"):\n    config.load_kube_config()\n\n    config_map_name = f"skald-worker-config-{task_name}"\n    data = {\n        "all_workers.yml": """TaskWorkers:\n  TaskWorker1:\n    isPersistent: true\n    attachments:\n      fix_frame: 10\n      rtsp_url: rtsp://192.168.1.1/camera1\n    className: MyWorker\n"""\n    }\n\n    config_map = client.V1ConfigMap(\n        metadata=client.V1ObjectMeta(name=config_map_name),\n        data=data\n    )\n\n    core_v1 = client.CoreV1Api()\n    core_v1.create_namespaced_config_map(namespace=namespace, body=config_map)\n    print(f"ConfigMap \'{config_map_name}\' created.")\n\nif __name__ == "__main__":\n    create_worker_configmap()\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u82e5\u540c\u4e00 Namespace \u9700\u8981\u591a\u7d44 ",(0,r.jsx)(n.code,{children:"all_workers.yml"}),"\uff0c\u5efa\u8b70\u70ba\u4e0d\u540c\u4efb\u52d9\u4f7f\u7528\u7368\u7acb\u7684 ConfigMap \u8207 Deployment\uff0c\u4e26\u5728\u547d\u540d\u4e0a\u52a0\u5165\u4efb\u52d9\u8b58\u5225\uff08\u4f8b\u5982 ",(0,r.jsx)(n.code,{children:"skald-worker-config-<task>"}),"\u3001",(0,r.jsx)(n.code,{children:"skald-single-worker-<task>"}),"\uff09\uff0c\u907f\u514d\u6df7\u6dc6\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"isPersistent"})," \u6b04\u4f4d\uff08\u50c5\u5728 ",(0,r.jsx)(n.code,{children:"single_process"})," \u6a21\u5f0f\u9069\u7528\uff09\u53ef\u5354\u52a9\u4f60\u5728\u5efa\u7acb Kubernetes \u8cc7\u6e90\u6642\u5224\u65b7\u8981\u4f7f\u7528 Deployment\uff08\u9577\u671f\u5e38\u99d0\uff0c",(0,r.jsx)(n.code,{children:"true"}),"\uff09\u6216 Job\uff08\u4e00\u6b21\u6027\u6279\u6b21\uff0c",(0,r.jsx)(n.code,{children:"false"}),"\uff09\u3002\u4e0b\u5217\u7bc4\u4f8b\u4ee5\u5e38\u99d0\u4efb\u52d9\u70ba\u4f8b\u3002"]}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["\u63a5\u8457\u5efa\u7acb Deployment\uff08\u4ee5 ",(0,r.jsx)(n.code,{children:"task-alpha"})," \u70ba\u4f8b\uff0c\u53ef\u53e6\u5b58\u70ba ",(0,r.jsx)(n.code,{children:"task-alpha-deploy.yaml"}),"\uff0c\u6216\u76f4\u63a5\u4ee5 API \u5efa\u7acb\uff09\uff1a"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: skald-single-worker-task-alpha\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: skald-single-worker-task-alpha\n  template:\n    metadata:\n      labels:\n        app: skald-single-worker-task-alpha\n    spec:\n      containers:\n        - name: worker\n          image: <your-registry>/<your-worker-image>:latest\n          env:\n            - name: SKALD_MODE\n              value: single_process\n            - name: SKALD_ID\n              value: worker-sp-task-alpha\n            - name: YAML_FILE\n              value: /config/all_workers.yml\n            - name: LOG_LEVEL\n              value: INFO\n            # \u4f9d\u9700\u6c42\u6ce8\u5165 Kafka\u3001Redis\u3001Mongo \u76f8\u95dc\u74b0\u5883\u8b8a\u6578\n            - name: KAFKA_HOST\n              value: ""\n            - name: REDIS_HOST\n              value: ""\n            - name: MONGO_HOST\n              value: mongodb://username:password@mongo:27017/\n          volumeMounts:\n            - name: worker-config\n              mountPath: /config\n              readOnly: true\n      volumes:\n        - name: worker-config\n          configMap:\n            name: skald-worker-config-task-alpha\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"\u82e5\u60f3\u4ee5 Python \u7a0b\u5f0f\u63a7\u5236\u5efa\u7acb ConfigMap \u8207 Deployment\uff0c\u53ef\u5c07\u4efb\u52d9\u540d\u7a31\u4f5c\u70ba\u53c3\u6578\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from kubernetes import client, config\n\ndef create_single_process_resources(namespace: str, task_name: str):\n    config.load_kube_config()  # \u4e5f\u53ef\u6539\u7528 load_incluster_config()\n\n    config_map_name = f"skald-worker-config-{task_name}"\n    deployment_name = f"skald-single-worker-{task_name}"\n    pod_label = {"app": deployment_name}\n\n    config_map_data = {\n        "all_workers.yml": """TaskWorkers:\n  TaskWorker1:\n    isPersistent: true\n    attachments:\n      fix_frame: 10\n      rtsp_url: rtsp://192.168.1.1/camera1\n    className: MyWorker\n"""\n    }\n\n    core_v1 = client.CoreV1Api()\n    core_v1.create_namespaced_config_map(\n        namespace=namespace,\n        body=client.V1ConfigMap(\n            metadata=client.V1ObjectMeta(name=config_map_name),\n            data=config_map_data\n        )\n    )\n\n    container = client.V1Container(\n        name="worker",\n        image="<your-registry>/<your-worker-image>:latest",\n        env=[\n            client.V1EnvVar(name="SKALD_MODE", value="single_process"),\n            client.V1EnvVar(name="SKALD_ID", value=f"worker-sp-{task_name}"),\n            client.V1EnvVar(name="YAML_FILE", value="/config/all_workers.yml"),\n            client.V1EnvVar(name="LOG_LEVEL", value="INFO"),\n            client.V1EnvVar(name="KAFKA_HOST", value=""),\n            client.V1EnvVar(name="REDIS_HOST", value=""),\n            client.V1EnvVar(name="MONGO_HOST", value="mongodb://username:password@mongo:27017/"),\n        ],\n        volume_mounts=[\n            client.V1VolumeMount(name="worker-config", mount_path="/config", read_only=True)\n        ]\n    )\n\n    pod_spec = client.V1PodSpec(\n        containers=[container],\n        volumes=[\n            client.V1Volume(\n                name="worker-config",\n                config_map=client.V1ConfigMapVolumeSource(name=config_map_name)\n            )\n        ]\n    )\n\n    template = client.V1PodTemplateSpec(\n        metadata=client.V1ObjectMeta(labels=pod_label),\n        spec=pod_spec\n    )\n\n    spec = client.V1DeploymentSpec(\n        replicas=1,\n        selector=client.V1LabelSelector(match_labels=pod_label),\n        template=template\n    )\n\n    deployment = client.V1Deployment(\n        api_version="apps/v1",\n        kind="Deployment",\n        metadata=client.V1ObjectMeta(name=deployment_name),\n        spec=spec\n    )\n\n    apps_v1 = client.AppsV1Api()\n    apps_v1.create_namespaced_deployment(namespace=namespace, body=deployment)\n    print(f"ConfigMap \'{config_map_name}\' and Deployment \'{deployment_name}\' created.")\n\nif __name__ == "__main__":\n    create_single_process_resources(namespace="default", task_name="task-alpha")\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"\u4e0d\u8ad6\u900f\u904e YAML \u6216 Python API \u5efa\u7acb\uff0c\u7686\u53ef\u7528\u4ee5\u4e0b\u6307\u4ee4\u6aa2\u67e5\u72c0\u614b\u8207\u65e5\u8a8c\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl get deploy skald-single-worker-task-alpha\nkubectl get pods -l app=skald-single-worker-task-alpha\nkubectl logs deploy/skald-single-worker-task-alpha\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u6ce8\u610f\u4e8b\u9805"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["ConfigMap \u4e2d\u50c5\u6703\u555f\u52d5\u7b2c\u4e00\u500b ",(0,r.jsx)(n.code,{children:"TaskWorker"}),"\uff1b\u82e5\u9700\u4e0d\u540c\u4efb\u52d9\uff0c\u8acb\u70ba\u6bcf\u4efd YAML \u6e96\u5099\u5c0d\u61c9\u7684 Deployment\uff08\u6216\u5efa\u7acb\u591a\u500b ConfigMap + Deployment \u7d44\u5408\uff09\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SKALD_MODE"})," \u5fc5\u9808\u8a2d\u70ba ",(0,r.jsx)(n.code,{children:"single_process"}),"\uff0c\u4e14 ",(0,r.jsx)(n.code,{children:"YAML_FILE"})," \u61c9\u6307\u5411\u639b\u8f09\u5f8c\u7684\u8def\u5f91\uff0c\u4ee5\u4fdd\u6301\u8207\u672c\u5730 ",(0,r.jsx)(n.code,{children:"all_workers.yml"})," \u76f8\u540c\u7684\u683c\u5f0f\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isPersistent: false"}),"\uff08\u50c5 ",(0,r.jsx)(n.code,{children:"single_process"})," \u6a21\u5f0f\u9069\u7528\uff09\u6642\u53ef\u8003\u616e\u6539\u4ee5 Kubernetes Job/CronJob \u89f8\u767c\u55ae\u6b21\u5de5\u4f5c\uff0c\u8207 Skald \u9577\u671f\u4efb\u52d9\u914d\u7f6e\u505a\u51fa\u5340\u9694\u3002"]}),"\n",(0,r.jsx)(n.li,{children:"Kubernetes \u53ef\u900f\u904e Deployment\u3001CronJob \u7b49\u8cc7\u6e90\u7ba1\u7406 Single Process Pod \u7684\u751f\u547d\u9031\u671f\uff0c\u85c9\u6b64\u5f48\u6027\u64f4\u5c55\u6216\u6392\u7a0b\u4efb\u52d9\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-skald-\u6838\u5fc3\u6d41\u7a0b\u8207\u751f\u547d\u9031\u671f",children:"4. Skald \u6838\u5fc3\u6d41\u7a0b\u8207\u751f\u547d\u9031\u671f"}),"\n",(0,r.jsx)(n.h3,{id:"41-\u4efb\u52d9\u5efa\u7acb\u6d41\u7a0b",children:"4.1 \u4efb\u52d9\u5efa\u7acb\u6d41\u7a0b"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Skald \u555f\u52d5\uff0c\u5411 Redis \u8a3b\u518a\u81ea\u8eab ID \u8207\u5fc3\u8df3\u3002"}),"\n",(0,r.jsx)(n.li,{children:"System Controller \u76e3\u63a7\u53ef\u7528 Skald \u7bc0\u9ede\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u63a5\u6536\u4efb\u52d9\u5efa\u7acb\u4e8b\u4ef6\uff08Node \u6a21\u5f0f\u7531 Event Queue \u89f8\u767c\uff0cEdge \u6a21\u5f0f\u7531 YAML \u8f09\u5165\uff09\u3002"}),"\n",(0,r.jsx)(n.li,{children:"Skald \u6839\u64da\u4efb\u52d9\u7d30\u7bc0\u5efa\u7acb TaskWorker \u5be6\u9ad4\u3002"}),"\n",(0,r.jsx)(n.li,{children:"TaskWorker \u8a3b\u518a\u72c0\u614b\u3001\u5fc3\u8df3\u81f3 Redis\uff0c\u9032\u5165\u57f7\u884c\u72c0\u614b\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"42-\u4efb\u52d9\u66f4\u65b0\u8207\u53d6\u6d88",children:"4.2 \u4efb\u52d9\u66f4\u65b0\u8207\u53d6\u6d88"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u4efb\u52d9\u66f4\u65b0\uff1aSystem Controller \u767c\u4f48\u66f4\u65b0\u4e8b\u4ef6\uff0cSkald \u8f49\u767c\u81f3\u5c0d\u61c9 TaskWorker\uff0c\u652f\u63f4\u52d5\u614b\u53c3\u6578\u71b1\u66f4\u65b0\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u4efb\u52d9\u53d6\u6d88\uff1a\u5ee3\u64ad\u53d6\u6d88\u4e8b\u4ef6\uff0cSkald \u95dc\u9589\u5c0d\u61c9 TaskWorker\uff0c\u91cb\u653e\u8cc7\u6e90\u3002"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u8a73\u7d30\u6d41\u7a0b\u8acb\u53c3\u8003",(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/task_lifecycle",children:"\u4efb\u52d9\u751f\u547d\u9031\u671f"}),"\u3002"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-skald-\u4e3b\u8981\u529f\u80fd\u8207\u5be6\u4f5c\u91cd\u9ede",children:"5. Skald \u4e3b\u8981\u529f\u80fd\u8207\u5be6\u4f5c\u91cd\u9ede"}),"\n",(0,r.jsx)(n.h3,{id:"51-\u591a\u5354\u5b9a\u6574\u5408",children:"5.1 \u591a\u5354\u5b9a\u6574\u5408"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kafka"}),"\uff1a\u4e8b\u4ef6\u4f47\u5217\uff0c\u8ca0\u8cac\u4efb\u52d9\u5206\u914d\u3001\u66f4\u65b0\u3001\u53d6\u6d88\u7b49\u4e8b\u4ef6\u6d41\u8f49\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Redis"}),"\uff1a\u5feb\u53d6\u4efb\u52d9\u72c0\u614b\u3001\u5fc3\u8df3\u3001\u932f\u8aa4\u8a0a\u606f\uff0c\u652f\u63f4\u9ad8\u6548\u76e3\u63a7\u8207\u8abf\u5ea6\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MongoDB"}),"\uff1a\u6301\u4e45\u5316\u4efb\u52d9\u8cc7\u6599\uff0c\u652f\u63f4\u67e5\u8a62\u8207\u7d71\u8a08\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"52-taskworker-\u7ba1\u7406",children:"5.2 TaskWorker \u7ba1\u7406"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u652f\u63f4\u591a\u578b\u5225 TaskWorker \u8a3b\u518a\u8207\u52d5\u614b\u5efa\u7acb\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u751f\u547d\u9031\u671f\u7ba1\u7406\uff08\u555f\u52d5\u3001\u76e3\u63a7\u3001\u7d42\u6b62\u3001\u932f\u8aa4\u8655\u7406\uff09\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u652f\u63f4 YAML \u6279\u91cf\u914d\u7f6e\uff08Edge\uff09\u3001\u4e8b\u4ef6\u9a45\u52d5\u52d5\u614b\u5206\u914d\uff08Node\uff09\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"53-\u65e5\u8a8c\u8207\u76e3\u63a7",children:"5.3 \u65e5\u8a8c\u8207\u76e3\u63a7"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6574\u5408\u591a\u5c64\u7d1a\u65e5\u8a8c\uff08Loguru\uff09\uff0c\u652f\u63f4\u81ea\u52d5\u5206\u5272\u3001\u4fdd\u7559\u3001\u6e05\u7406\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u5fc3\u8df3\u8207\u6d3b\u52d5\u72c0\u614b\u81ea\u52d5\u540c\u6b65\u81f3 Redis\uff0c\u4fbf\u65bc System Controller \u76e3\u63a7\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-yaml-\u914d\u7f6e\u8aaa\u660eedge-\u6a21\u5f0f",children:"6. YAML \u914d\u7f6e\u8aaa\u660e\uff08Edge \u6a21\u5f0f\uff09"}),"\n",(0,r.jsx)(n.p,{children:"YAML \u914d\u7f6e\u6a94\u7528\u65bc Edge \u7bc0\u9ede\u6279\u91cf\u5b9a\u7fa9 TaskWorker\uff0c\u7d50\u69cb\u5982\u4e0b\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"TaskWorkers:\n  TaskWorker1:\n    isPersistent: true\n    attachments:\n      fixFrame: 30\n      rtspUrl: rtsp://192.168.1.1/camera1\n    className: MyWorker\n  TaskWorker2:\n    isPersistent: false\n    attachments:\n      jobId: job-12345\n      retries: 2\n      sub_tasks:\n        - name: Download Data\n          duration: 1.5\n          fail_chance: 0.2\n        - name: Process Data\n          duration: 2.0\n          fail_chance: 0.1\n    className: ComplexWorker\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TaskWorker1"}),"\u3001",(0,r.jsx)(n.code,{children:"TaskWorker2"}),"\uff1a\u6bcf\u500b\u5de5\u4f5c\u8005\u7684\u552f\u4e00\u540d\u7a31\uff08\u5373\u4efb\u52d9 ID\uff09\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isPersistent"}),"\uff1a\u4efb\u52d9\u662f\u5426\u5e38\u99d0\uff08",(0,r.jsx)(n.code,{children:"true"}),"\uff09\u6216\u4e00\u6b21\u6027\uff08",(0,r.jsx)(n.code,{children:"false"}),"\uff09\uff0c\u50c5\u5728 ",(0,r.jsx)(n.code,{children:"single_process"})," \u6a21\u5f0f\u4f5c\u70ba\u5207\u63db Deployment / Job \u7684\u4f9d\u64da\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"attachments"}),"\uff1a\u521d\u59cb\u5316\u53c3\u6578\uff0c\u9700\u5c0d\u61c9 Python \u985e\u5225\u7684 Pydantic \u8cc7\u6599\u6a21\u578b\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"className"}),"\uff1a\u5c0d\u61c9\u5df2\u8a3b\u518a\u65bc Skalds \u7684 Python \u985e\u5225\u540d\u7a31\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u8a73\u7d30\u8aaa\u660e\u8acb\u53c3\u8003",(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/yaml_config",children:"\u300aYAML \u914d\u7f6e\u6a94\u8aaa\u660e\u300b"}),"\u3002"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-skald-\u4e3b\u8981\u7a0b\u5f0f\u78bc\u7d50\u69cb",children:"7. Skald \u4e3b\u8981\u7a0b\u5f0f\u78bc\u7d50\u69cb"}),"\n",(0,r.jsx)(n.h3,{id:"71-skald-\u4e3b\u985e\u5225",children:"7.1 Skald \u4e3b\u985e\u5225"}),"\n",(0,r.jsxs)(n.p,{children:["\u53c3\u8003 ",(0,r.jsx)(n.a,{href:"https://github.com/JiHungLin/skalds/blob/main/skalds/skald.py",children:"skalds/skald.py (GitHub)"}),"\uff1a"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"__init__"}),"\uff1a\u521d\u59cb\u5316\u5404\u9805\u670d\u52d9\u9023\u7dda\u3001\u65e5\u8a8c\u3001\u6a21\u5f0f\u5224\u65b7\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"register_task_worker"}),"\uff1a\u8a3b\u518a\u81ea\u8a02 TaskWorker \u985e\u5225\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run"}),"\uff1a\u4e3b\u57f7\u884c\u6d41\u7a0b\uff0c\u5305\u542b\uff1a","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u8a2d\u5b9a\u5fc3\u8df3\u8207\u6d3b\u52d5\u8a3b\u518a\uff08Redis\uff09"}),"\n",(0,r.jsx)(n.li,{children:"\u555f\u52d5 TaskWorkerManager\uff0c\u8ca0\u8cac Kafka \u6d88\u8cbb\u8207 TaskWorker \u7ba1\u7406"}),"\n",(0,r.jsx)(n.li,{children:"Edge \u6a21\u5f0f\u81ea\u52d5\u8f09\u5165 YAML \u914d\u7f6e"}),"\n",(0,r.jsx)(n.li,{children:"\u8a0a\u865f\u8655\u7406\u8207\u512a\u96c5\u95dc\u9589"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"72-\u914d\u7f6e\u8207\u74b0\u5883\u8b8a\u6578",children:"7.2 \u914d\u7f6e\u8207\u74b0\u5883\u8b8a\u6578"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/JiHungLin/skalds/blob/main/skalds/config/skald_config.py",children:"skalds/config/skald_config.py (GitHub)"}),"\uff1aSkaldConfig \u53c3\u6578\u5b9a\u7fa9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/JiHungLin/skalds/blob/main/skalds/config/systemconfig.py",children:"skalds/config/systemconfig.py (GitHub)"}),"\uff1aSystemConfig \u9810\u8a2d\u503c\u8207\u74b0\u5883\u8b8a\u6578\u5c0d\u61c9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/JiHungLin/skalds/blob/main/skalds/config/_enum.py",children:"skalds/config/_enum.py (GitHub)"}),"\uff1a\u6a21\u5f0f\u3001\u74b0\u5883\u3001\u65e5\u8a8c\u7b49\u5217\u8209\u578b\u5225"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-skald-\u8207\u5176\u4ed6\u6a21\u7d44\u7684\u4e92\u52d5",children:"8. Skald \u8207\u5176\u4ed6\u6a21\u7d44\u7684\u4e92\u52d5"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TaskWorker"}),"\uff1aSkald \u52d5\u614b\u5efa\u7acb\u8207\u7ba1\u7406 TaskWorker\uff0c\u652f\u63f4\u591a\u578b\u5225\u8207\u52d5\u614b\u53c3\u6578\u66f4\u65b0\uff0c\u8a73\u898b",(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/task_worker",children:"TaskWorker \u8aaa\u660e"}),"\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Queue"}),"\uff1a\u900f\u904e Kafka \u5be6\u73fe\u4efb\u52d9\u5206\u914d\u3001\u66f4\u65b0\u3001\u53d6\u6d88\u7b49\u4e8b\u4ef6\u6d41\u8f49\uff0c\u8a73\u898b",(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/event_queue",children:"EventQueue \u8aaa\u660e"}),"\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cache Memory"}),"\uff1a\u6240\u6709\u72c0\u614b\u3001\u5fc3\u8df3\u3001\u932f\u8aa4\u8a0a\u606f\u7686\u540c\u6b65\u81f3 Redis\uff0c\u8a73\u898b",(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/cache_memory",children:"Cache Memory \u8aaa\u660e"}),"\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9-\u9032\u968e\u7279\u6027",children:"9. \u9032\u968e\u7279\u6027"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u591a\u968e\u6bb5\u4efb\u52d9\u8207\u91cd\u8a66"}),"\uff1aTaskWorker \u652f\u63f4\u591a\u968e\u6bb5\u57f7\u884c\u8207\u5931\u6557\u91cd\u8a66\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u52d5\u614b\u53c3\u6578\u71b1\u66f4\u65b0"}),"\uff1a\u4efb\u52d9\u57f7\u884c\u4e2d\u53ef\u5373\u6642\u8abf\u6574\u53c3\u6578\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u9ad8\u53ef\u7528\u8a2d\u8a08"}),"\uff1a\u652f\u63f4\u591a\u526f\u672c\u3001\u5206\u7247\u3001\u6545\u969c\u81ea\u52d5\u6062\u5fa9\u3002"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u578b\u5225\u5b89\u5168"}),"\uff1a\u6240\u6709\u4efb\u52d9\u8cc7\u6599\u8207\u4e8b\u4ef6\u7686\u63a1\u7528 Pydantic BaseModel\uff0c\u78ba\u4fdd\u8cc7\u6599\u7d50\u69cb\u56b4\u8b39\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"10-\u53c3\u8003\u6587\u4ef6\u8207\u5ef6\u4f38\u95b1\u8b80",children:"10. \u53c3\u8003\u6587\u4ef6\u8207\u5ef6\u4f38\u95b1\u8b80"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/Skalds/docs/intro",children:"Skalds \u67b6\u69cb\u8207\u6a21\u7d44\u7d30\u7bc0"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/task_lifecycle",children:"\u4efb\u52d9\u751f\u547d\u9031\u671f\u8207\u4e8b\u4ef6\u6d41"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/task_worker",children:"TaskWorker \u8a73\u7d30\u8aaa\u660e"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/yaml_config",children:"YAML \u914d\u7f6e\u8aaa\u660e"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/cache_memory",children:"Cache Memory \u5feb\u53d6\u8aaa\u660e"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/Skalds/docs/documents/event_queue",children:"EventQueue \u4e8b\u4ef6\u4f47\u5217\u8aaa\u660e"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Skald \u7bc0\u9ede\u662f Skalds \u5206\u6563\u5f0f\u4efb\u52d9\u8abf\u5ea6\u7cfb\u7d71\u7684\u6838\u5fc3\uff0c\u6b63\u78ba\u914d\u7f6e\u8207\u5584\u7528 Skald \u80fd\u5927\u5e45\u63d0\u5347\u7cfb\u7d71\u7684\u5f48\u6027\u3001\u6548\u80fd\u8207\u53ef\u7dad\u8b77\u6027\u3002"})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},9863:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var l=s(9729);const r={},a=l.createContext(r);function d(e){const n=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);