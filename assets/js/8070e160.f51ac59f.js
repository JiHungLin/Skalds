"use strict";(self.webpackChunkwebsite_2=self.webpackChunkwebsite_2||[]).push([[822],{1502:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"quickstart","title":"\u5feb\u901f\u5165\u9580","description":"\u672c\u7ae0\u7bc0\u4ee5\u300cEdge \u6a21\u5f0f + YAML \u914d\u7f6e\u300d\u70ba\u4e3b\u8ef8\uff0c\u5e36\u4f60\u5728\u672c\u6a5f\u5feb\u901f\u9ad4\u9a57 Skalds \u6846\u67b6\u5982\u4f55\u4ee5 YAML \u7ba1\u7406\u4e26\u904b\u884c TaskWorker\u3002","source":"@site/docs/quickstart.md","sourceDirName":".","slug":"/quickstart","permalink":"/Skalds/docs/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"quickstartSidebar","next":{"title":"\u74b0\u5883\u5efa\u7f6e","permalink":"/Skalds/docs/env_setup"}}');var l=r(5813),i=r(9863);const d={},a="\u5feb\u901f\u5165\u9580",o={},c=[{value:"\u5b89\u88dd\u5957\u4ef6",id:"\u5b89\u88dd\u5957\u4ef6",level:2},{value:"1. \u4e00\u822c\u5b89\u88dd\uff08\u50c5\u9700\u57fa\u672c\u529f\u80fd/Edge \u6a21\u5f0f\uff09",id:"1-\u4e00\u822c\u5b89\u88dd\u50c5\u9700\u57fa\u672c\u529f\u80fdedge-\u6a21\u5f0f",level:3},{value:"2. \u9032\u968e\u5b89\u88dd\uff08\u9700\u5f8c\u7aef\u6574\u5408\uff0c\u5982 System Controller\u3001API\u3001\u76e3\u63a7\u7b49\uff09",id:"2-\u9032\u968e\u5b89\u88dd\u9700\u5f8c\u7aef\u6574\u5408\u5982-system-controllerapi\u76e3\u63a7\u7b49",level:3},{value:"1. \u4ec0\u9ebc\u662f Edge \u6a21\u5f0f\uff1f\u70ba\u4f55\u7528 YAML\uff1f",id:"1-\u4ec0\u9ebc\u662f-edge-\u6a21\u5f0f\u70ba\u4f55\u7528-yaml",level:2},{value:"2. \u5b9a\u7fa9\u4f60\u7684 Task Worker\uff08\u5efa\u8b70\u53ef\u7368\u7acb\u904b\u884c\uff09",id:"2-\u5b9a\u7fa9\u4f60\u7684-task-worker\u5efa\u8b70\u53ef\u7368\u7acb\u904b\u884c",level:2},{value:"3. \u7528 YAML \u914d\u7f6e TaskWorker",id:"3-\u7528-yaml-\u914d\u7f6e-taskworker",level:2},{value:"4. Edge \u4e3b\u7a0b\u5f0f\uff1a\u555f\u52d5 Skalds \u4e26\u8f09\u5165 YAML",id:"4-edge-\u4e3b\u7a0b\u5f0f\u555f\u52d5-skalds-\u4e26\u8f09\u5165-yaml",level:2},{value:"5. \u57f7\u884c\u7bc4\u4f8b",id:"5-\u57f7\u884c\u7bc4\u4f8b",level:2},{value:"6. \u9032\u968e\u61c9\u7528",id:"6-\u9032\u968e\u61c9\u7528",level:2}];function t(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"\u5feb\u901f\u5165\u9580",children:"\u5feb\u901f\u5165\u9580"})}),"\n",(0,l.jsxs)(n.p,{children:["\u672c\u7ae0\u7bc0\u4ee5\u300cEdge \u6a21\u5f0f + YAML \u914d\u7f6e\u300d\u70ba\u4e3b\u8ef8\uff0c\u5e36\u4f60\u5728\u672c\u6a5f\u5feb\u901f\u9ad4\u9a57 Skalds \u6846\u67b6\u5982\u4f55\u4ee5 YAML \u7ba1\u7406\u4e26\u904b\u884c TaskWorker\u3002",(0,l.jsx)(n.br,{}),"\n","\u672c\u6559\u5b78\u7bc4\u4f8b\u5b8c\u6574\u539f\u59cb\u78bc\u53ef\u53c3\u8003\uff1a",(0,l.jsx)(n.a,{href:"https://github.com/JiHungLin/Skalds/tree/main/examples/single_task_worker_define",children:"GitHub \u7bc4\u4f8b\u7a0b\u5f0f"})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"\u5b89\u88dd\u5957\u4ef6",children:"\u5b89\u88dd\u5957\u4ef6"}),"\n",(0,l.jsx)(n.p,{children:"\u6839\u64da\u4f60\u7684\u9700\u6c42\uff0c\u8acb\u9078\u64c7\u5b89\u88dd\u4e00\u822c\u7248\u6216\u5305\u542b\u5f8c\u7aef\u529f\u80fd\u7684\u9032\u968e\u7248\uff1a"}),"\n",(0,l.jsx)(n.h3,{id:"1-\u4e00\u822c\u5b89\u88dd\u50c5\u9700\u57fa\u672c\u529f\u80fdedge-\u6a21\u5f0f",children:"1. \u4e00\u822c\u5b89\u88dd\uff08\u50c5\u9700\u57fa\u672c\u529f\u80fd/Edge \u6a21\u5f0f\uff09"}),"\n",(0,l.jsx)(n.p,{children:"\u9069\u7528\u65bc\u53ea\u9700\u672c\u5730\u904b\u7b97\u3001YAML \u914d\u7f6e\u8207 TaskWorker \u7684\u4f7f\u7528\u8005\u3002"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install skalds\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-\u9032\u968e\u5b89\u88dd\u9700\u5f8c\u7aef\u6574\u5408\u5982-system-controllerapi\u76e3\u63a7\u7b49",children:"2. \u9032\u968e\u5b89\u88dd\uff08\u9700\u5f8c\u7aef\u6574\u5408\uff0c\u5982 System Controller\u3001API\u3001\u76e3\u63a7\u7b49\uff09"}),"\n",(0,l.jsx)(n.p,{children:"skalds[backend] \u70ba\u5206\u5272\u51fa\u4f86\u7684\u5957\u4ef6\uff0c\u5305\u542b\u6240\u6709\u5f8c\u7aef\u76f8\u4f9d\u5143\u4ef6\uff08\u5982 FastAPI\uff0cMonitor\uff0cDispatcher \u7b49\uff09\u3002"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'pip install "skalds[backend]"\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"1-\u4ec0\u9ebc\u662f-edge-\u6a21\u5f0f\u70ba\u4f55\u7528-yaml",children:"1. \u4ec0\u9ebc\u662f Edge \u6a21\u5f0f\uff1f\u70ba\u4f55\u7528 YAML\uff1f"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Edge \u6a21\u5f0f"}),"\uff1aSkalds \u652f\u63f4 Edge/Node \u67b6\u69cb\uff0c\u672c\u7bc4\u4f8b\u4ee5 Edge \u6a21\u5f0f\u70ba\u4f8b\uff0c\u9069\u5408\u55ae\u6a5f\u6216\u908a\u7de3\u904b\u7b97\u5834\u666f\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"YAML \u914d\u7f6e"}),"\uff1a\u6240\u6709 TaskWorker \u5be6\u4f8b\u8207\u53c3\u6578\u96c6\u4e2d\u65bc YAML \u6a94\uff0c\u65b9\u4fbf\u7ba1\u7406\u3001\u71b1\u66f4\u65b0\u8207\u591a Worker \u914d\u7f6e\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"2-\u5b9a\u7fa9\u4f60\u7684-task-worker\u5efa\u8b70\u53ef\u7368\u7acb\u904b\u884c",children:"2. \u5b9a\u7fa9\u4f60\u7684 Task Worker\uff08\u5efa\u8b70\u53ef\u7368\u7acb\u904b\u884c\uff09"}),"\n",(0,l.jsxs)(n.p,{children:["Skalds \u900f\u904e\u300cTask Worker\u300d\u57f7\u884c\u4efb\u52d9\u3002\u5efa\u8b70\u6bcf\u500b Worker \u6a94\u6848\u90fd\u52a0\u4e0a ",(0,l.jsx)(n.code,{children:'if __name__ == "__main__"'}),"\uff0c\u53ef\u55ae\u7368\u6e2c\u8a66\u908f\u8f2f\uff0c\u78ba\u4fdd\u6b63\u78ba\u6027\u3002"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"my_simple_worker.py"})})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from skalds.worker.baseclass import BaseTaskWorker, run_before_handler, run_main_handler\nfrom skalds.utils.logging import logger\nfrom pydantic import BaseModel, Field, ConfigDict\nimport time\n\nclass MySimpleDataModel(BaseModel):\n    rtsp_url: str = Field(..., description="RTSP stream URL", alias="rtspUrl")\n    fix_frame: int = Field(..., description="Fix frame number", alias="fixFrame")\n    model_config = ConfigDict(\n        populate_by_name=True,\n        use_enum_values=True\n    )\n\nclass MySimpleWorker(BaseTaskWorker[MySimpleDataModel]):\n    def initialize(self, data: MySimpleDataModel) -> None:\n        self.rtsp_url = data.rtsp_url\n        self.fix_frame = data.fix_frame\n\n    @run_before_handler\n    def before_run(self) -> None:\n        logger.info(f"Starting MyWorker with RTSP URL: {self.rtsp_url}")\n\n    @run_main_handler\n    def main_run(self) -> None:\n        for _ in range(30):\n            logger.info(f"Running main logic for MyWorker")\n            logger.info(f"RTSP URL: {self.rtsp_url}, Fix Frame: {self.fix_frame}")\n            time.sleep(1)\n\nif __name__ == "__main__":\n    # \u5efa\u8b70\uff1a\u53ef\u76f4\u63a5\u57f7\u884c\u672c\u6a94\u6848\uff0c\u55ae\u7368\u6e2c\u8a66 Worker \u908f\u8f2f\n    my_data = MySimpleDataModel(rtsp_url="rtsp://example.com/stream", fix_frame=10)\n    my_worker = MySimpleWorker()\n    my_worker.initialize(my_data)\n    my_worker.start()\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"\u8aaa\u660e\uff1a"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'if __name__ == "__main__"'})," \u8b93\u4f60\u53ef\u76f4\u63a5 ",(0,l.jsx)(n.code,{children:"python my_simple_worker.py"})," \u6e2c\u8a66 Worker \u884c\u70ba\uff0c\u7121\u9700\u555f\u52d5\u6574\u500b Skalds \u7cfb\u7d71\u3002"]}),"\n",(0,l.jsx)(n.li,{children:"\u5be6\u969b\u904b\u884c\u6642\uff0cSkalds \u6703\u81ea\u52d5\u6ce8\u5165 YAML \u53c3\u6578\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"3-\u7528-yaml-\u914d\u7f6e-taskworker",children:"3. \u7528 YAML \u914d\u7f6e TaskWorker"}),"\n",(0,l.jsx)(n.p,{children:"\u6240\u6709 Worker \u5be6\u4f8b\u8207\u555f\u52d5\u53c3\u6578\u96c6\u4e2d\u65bc YAML \u6a94\uff0c\u65b9\u4fbf\u7ba1\u7406\u8207\u6279\u6b21\u8abf\u6574\u3002"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"all_workers.yml"})})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"TaskWorkers:\n  TaskWorker1:\n    isPersistent: true\n    attachments:\n      fix_frame: 10\n      rtsp_url: rtsp://192.168.1.1/camera1\n    className: MySimpleWorker\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"\u8aaa\u660e\uff1a"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"TaskWorkers"})," \u4e0b\u53ef\u5b9a\u7fa9\u591a\u500b worker \u5be6\u4f8b\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"isPersistent"}),"\uff08\u9810\u8a2d ",(0,l.jsx)(n.code,{children:"true"}),"\uff09\u50c5\u5728 ",(0,l.jsx)(n.code,{children:"single_process"})," \u6a21\u5f0f\u751f\u6548\uff0c\u7528\u4f86\u5340\u5206\u9577\u671f\u5e38\u99d0\uff08Deployment\uff09\u8207\u4e00\u6b21\u6027\u4efb\u52d9\uff08Job/CronJob\uff09\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"attachments"})," \u5c0d\u61c9\u8cc7\u6599\u6a21\u578b\u6b04\u4f4d\uff0c\u5c07\u81ea\u52d5\u6ce8\u5165\u81f3 worker\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"className"})," \u6307\u5b9a\u5c0d\u61c9\u7684 Python Worker \u985e\u5225\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"4-edge-\u4e3b\u7a0b\u5f0f\u555f\u52d5-skalds-\u4e26\u8f09\u5165-yaml",children:"4. Edge \u4e3b\u7a0b\u5f0f\uff1a\u555f\u52d5 Skalds \u4e26\u8f09\u5165 YAML"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"skald_edge.py"})})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from skalds import Skald\nfrom skalds.config.skald_config import SkaldConfig\nfrom examples.single_task_worker_define.my_simple_worker import MySimpleWorker\n\nconfig = SkaldConfig(\n    skald_mode="edge",  # \u5fc5\u9808\u8a2d\u70ba "edge"\n    yaml_file="all_workers.yml",  # \u6307\u5b9a YAML \u6a94\u6848\u8def\u5f91\uff08\u5efa\u8b70\u7528\u7d55\u5c0d\u6216\u76f8\u5c0d\u8def\u5f91\uff09\n    log_split_with_worker_id=True, # \u53ef\u5c07TaskWorer\u7684Log\u6a94\u6848\u7368\u7acb\u51fa\u4f86\uff0c\u4fbf\u65bcdebug\n    # \u4ee5\u4e0b\u70ba\u9078\u7528\uff0c\u4f9d\u9700\u6c42\u6c7a\u5b9a\u662f\u5426\u9023\u63a5\n    redis_host="localhost",\n    redis_port=6379,\n    kafka_host="127.0.0.1",\n    kafka_port=9092,\n    mongo_host="mongodb://root:root@localhost:27017/",\n    log_level="DEBUG",\n)\n\napp = Skald(config)\napp.register_task_worker(MySimpleWorker)\n\nif __name__ == "__main__":\n    app.run()\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"\u8aaa\u660e\u8207\u6ce8\u610f\u4e8b\u9805\uff1a"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'skald_mode="edge"'})," \u5fc5\u9808\uff0c\u4ee3\u8868\u672c\u6a5f/\u908a\u7de3\u904b\u7b97\u6a21\u5f0f\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"yaml_file"})," \u5fc5\u9808\uff0c\u8acb\u78ba\u8a8d\u8def\u5f91\u6b63\u78ba\uff08\u53ef\u7528\u7d55\u5c0d\u8def\u5f91\u6216\u8207\u4e3b\u7a0b\u5f0f\u540c\u76ee\u9304\uff09\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"redis_host"}),"\u3001",(0,l.jsx)(n.code,{children:"kafka_host"}),"\u3001",(0,l.jsx)(n.code,{children:"mongo_host"})," \u70ba\u9078\u7528\uff1a","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Redis"}),"\uff1a\u555f\u7528\u5f8c\u53ef\u540c\u6b65\u5fc3\u8df3\u3001\u4efb\u52d9\u72c0\u614b\u5230 Redis\uff0c\u4fbf\u65bc\u76e3\u63a7\u8207\u591a\u7aef\u5354\u4f5c\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"MongoDB"}),"\uff1a\u53ef\u5c07 YAML \u914d\u7f6e\u540c\u6b65\u81f3\u8cc7\u6599\u5eab\uff0c\u652f\u63f4\u67e5\u8a62\u8207\u6301\u4e45\u5316\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Kafka"}),"\uff1a\u53ef\u63a5\u6536\u4f86\u81ea Kafka \u7684 Attachment \u66f4\u65b0\u4e8b\u4ef6\uff0c\u5be6\u73fe\u52d5\u614b\u53c3\u6578\u71b1\u66f4\u65b0\u3002"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"\u82e5\u672a\u63d0\u4f9b\u9019\u4e9b\u670d\u52d9\uff0cSkalds \u4ecd\u53ef\u55ae\u6a5f\u904b\u884c\uff0c\u4f46\u7121\u6cd5\u8de8\u7bc0\u9ede\u540c\u6b65\u72c0\u614b\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"5-\u57f7\u884c\u7bc4\u4f8b",children:"5. \u57f7\u884c\u7bc4\u4f8b"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\u78ba\u8a8d\u4e09\u500b\u6a94\u6848\uff08",(0,l.jsx)(n.code,{children:"my_simple_worker.py"}),"\u3001",(0,l.jsx)(n.code,{children:"all_workers.yml"}),"\u3001",(0,l.jsx)(n.code,{children:"skald_edge.py"}),"\uff09\u7686\u5728\u540c\u4e00\u76ee\u9304\u4e0b\uff0c\u6216\u8abf\u6574\u8def\u5f91\u6b63\u78ba\u3002"]}),"\n",(0,l.jsx)(n.li,{children:"\u82e5\u9700\u72c0\u614b\u540c\u6b65\u3001\u4e8b\u4ef6\u6d41\u7b49\u529f\u80fd\uff0c\u8acb\u5148\u555f\u52d5 Redis\u3001Kafka\u3001MongoDB \u7b49\u670d\u52d9\u3002"}),"\n",(0,l.jsx)(n.li,{children:"\u57f7\u884c\u555f\u52d5\u6a94\uff1a"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"python skald_edge.py\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u4f60\u5c07\u5728\u7d42\u7aef\u6a5f\u770b\u5230 Worker \u57f7\u884c\u7684\u65e5\u8a8c\u8f38\u51fa\uff0c\u4ee3\u8868\u4efb\u52d9\u5df2\u6210\u529f\u555f\u52d5\u4e26\u904b\u4f5c\u3002"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"6-\u9032\u968e\u61c9\u7528",children:"6. \u9032\u968e\u61c9\u7528"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u53ef\u4f9d\u9700\u6c42\u64f4\u5145\u8cc7\u6599\u6a21\u578b\u8207\u57f7\u884c\u908f\u8f2f\uff0c\u6216\u5b9a\u7fa9\u591a\u500b Worker\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u66f4\u591a YAML \u914d\u7f6e\u8207\u9032\u968e\u529f\u80fd\uff0c\u8acb\u53c3\u8003",(0,l.jsx)(n.a,{href:"./documents",children:"\u5b8c\u6574\u6587\u4ef6"}),"\u8207",(0,l.jsx)(n.a,{href:"./examples",children:"\u7bc4\u4f8b\u7a0b\u5f0f"}),"\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u82e5\u9700\u5728 Kubernetes \u4e2d\u4ee5\u7368\u7acb Pod \u57f7\u884c\u55ae\u4e00 TaskWorker\uff0c\u53ef\u53c3\u8003 ",(0,l.jsx)(n.a,{href:"/Skalds/docs/documents/skald#33-%E5%9C%A8-kubernetes-%E5%BB%BA%E7%AB%8B-single-process-%E4%BB%BB%E5%8B%99",children:"Single Process \u6a21\u5f0f\u8207 K8s \u6559\u5b78"}),"\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u672c\u6559\u5b78\u5b8c\u6574\u539f\u59cb\u78bc\uff1a",(0,l.jsx)(n.a,{href:"https://github.com/JiHungLin/Skalds/tree/main/examples/single_task_worker_define",children:"GitHub \u7bc4\u4f8b\u7a0b\u5f0f"})]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:"Skalds \u8b93\u4f60\u4ee5\u6700\u5c11\u7684\u7a0b\u5f0f\u78bc\uff0c\u5feb\u901f\u6253\u9020\u9ad8\u6548\u80fd\u3001\u53ef\u64f4\u5c55\u7684\u5206\u6563\u5f0f\u4efb\u52d9\u5e73\u53f0\uff01"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}},9863:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var s=r(9729);const l={},i=s.createContext(l);function d(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);